#ifndef _COMMON_DEFINES_H
#define _COMMON_DEFINES_H

#include "mongoose.h"

#include "rapidjson/writer.h"
#include "rapidjson/document.h"
#include "rapidjson/stringbuffer.h"

#include <iostream>
#include <string>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

using namespace std;

using namespace rapidjson;
using namespace std;

#define SIZEOF(n) ((int)(sizeof(n) / sizeof(n[0])))
// #define NULL (0)
#define FALSE (0)
#define TRUE  (1)

#define COIL_COUNT (8)
#define FLASHER_COUNT (8)

#define COIL_OFF 0
#define COIL_ON  1
#define COIL_ON_TIME 200 //the amount of time a coil is allowed to be continuously on for
#define COIL_COOLDOWN_TIME 50 //the amount of time a coil must be off before firing again

enum LampState{LAMP_OFF, LAMP_ON, LAMP_FLASH_SLOW, LAMP_FLASH_FAST};
enum ButtonName{BUTTON_PLUM_BOB_TILT, BUTTON_NOT_USED_0, BUTTON_TOP_LANE_LEFT, BUTTON_EASY_SPIN, BUTTON_TRUCK_T, BUTTON_SPIN_WHEEL, BUTTON_NOT_USED_1, BUTTON_RIGHT_FLIPPER, BUTTON_NOT_USED_2, BUTTON_OUTHOLE, BUTTON_TOP_LANE_MIDDLE, BUTTON_CENTER_RAMP, BUTTON_TRUCK_R, BUTTON_RIGHT_SPINNER, BUTTON_NOT_USED_3, BUTTON_LEFT_FLIPPER, BUTTON_CREDIT_BUTTON, BUTTON_TROUGH_1_RIGHT, BUTTON_TOP_LANE_RIGHT, BUTTON_TV_T, BUTTON_TRUCK_U, BUTTON_SPOT_LETTER, BUTTON_NOT_USED_4, BUTTON_NOT_USED_5, BUTTON_RIGHT_COIN, BUTTON_TROUGH_2_LEFT, BUTTON_RIGHT_RAMP, BUTTON_TV_V, BUTTON_TRUCK_C, BUTTON_NOT_USED_6, BUTTON_NOT_USED_7, BUTTON_LEFT_JET, BUTTON_CENTER_COIN, BUTTON_NOT_USED_8, BUTTON_BALL_POPPER, BUTTON_TRIP_T, BUTTON_TRUCK_K, BUTTON_LEFT_OUTLANE, BUTTON_NOT_USED_9, BUTTON_RIGHT_JET, BUTTON_LEFT_COIN, BUTTON_SHOOTER_LANE, BUTTON_NOT_USED_10, BUTTON_TRIP_R, BUTTON_NOT_USED_11, BUTTON_LEFT_RETURN, BUTTON_NOT_USED_12, BUTTON_BOTTOM_JET, BUTTON_SLAM_TILT, BUTTON_NOT_USED_13, BUTTON_LEFT_LOCKUP, BUTTON_TRIP_I, BUTTON_DROP_TARGET_CAR, BUTTON_RIGHT_RETURN, BUTTON_NOT_USED_14, BUTTON_LEFT_SLINGSHOT, BUTTON_HIGH_SCORE_RESET, BUTTON_BIG_BUCKS, BUTTON_NOT_USED_15, BUTTON_TRIP_P, BUTTON_NOT_USED_16, BUTTON_RIGHT_OUTLANE, BUTTON_NOT_USED_17, RIGHT_SLINGSHOT};
enum LampName{LAMP_SHOOT_AGAIN, LAMP_BONUS_1K, LAMP_WHEEL_5K, LAMP_WHEEL_45K, LAMP_TRUCK_T, LAMP_BIG_BUCKS, LAMP_2_MILLION_LEFT, LAMP_TOP_LANE_RIGHT, LAMP_WHEEL_5X, LAMP_BONUS_2X, LAMP_WHEEL_10K, LAMP_WHEEL_50K, LAMP_TRUCK_R, LAMP_TOP_LANE_RED_1, LAMP_LEFT_SPOT_LETTER, LAMP_GRAND_PRIZE, LAMP_BONUS_MULTIPLIER_1X, LAMP_BONUS_4K, LAMP_WHEEL_15K, LAMP_TV_T, LAMP_TRUCK_U, LAMP_TOP_LANE_RED_2, LAMP_LEFT_EXTRA_BALL_1, LAMP_COLLECT_TV, LAMP_BONUS_MULTIPLIER_2X, LAMP_BONUS_8K, LAMP_WHEEL_20K, LAMP_TV_V, LAMP_TRUCK_C, LAMP_BACK_PANEL_CAR, LAMP_2_MILLION_RIGHT, LAMP_COLLECT_TRIP, LAMP_BONUS_MULTIPLIER_4X, LAMP_BONUS_16K, LAMP_WHEEL_25K, LAMP_TRIP_T, LAMP_TRUCK_K, LAMP_LEFT_EXTRA_BALL_2, LAMP_RIGHT_SPOT_LETTER, LAMP_COLLECT_TRUCK, LAMP_BONUS_MILTIPLIER_8X, LAMP_BONUS_32_K, LAMP_WHEEL_30K, LAMP_TRIP_R, LAMP_WHEEL_250K, LAMP_WHEEL_4_MILLION, LAMP_RIGHT_SPINNER, LAMP_COLLECT_CAR, LAMP_CENTER_SPINNER, LAMP_BONUS_64K, LAMP_WHEEL_35K, LAMP_TRIP_I, LAMP_WHEEL_HOLD_BONUS, LAMP_WHEEL_EXTRA_BALL, LAMP_TOP_LANE_LEFT, LAMP_COLLECT_PRIZES, LAMP_CENTER_NUDGE, LAMP_BONUS_128K, LAMP_WHEEL_40K, LAMP_TRIP_P, LAMP_WHEEL_1_MILLION, LAMP_RIGHT_EXTRA_BALL, LAMP_TOP_LANE_MIDDLE, RIGHT_LOCK};

enum GameState{GS_OFF, GS_ATTRACT, GS_PLAYING, GS_DEBUG};

#endif